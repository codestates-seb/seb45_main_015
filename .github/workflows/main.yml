name: Java CI with Gradle

on:
  pull_request:
    branches: [ dev ]
  push:
    branches: [ dev ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'zulu'
      - name: Change working directory to subdirectory
        run: cd /home/runner/work/seb45_main_015/seb45_main_015/server
      - name: Grant execute permission for gradlew
        run: |
          cd /home/runner/work/seb45_main_015/seb45_main_015/server
          chmod +x gradlew
      - name: Build with Gradle
        run: |
          cd /home/runner/work/seb45_main_015/seb45_main_015/server
          ./gradlew build
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Build and push register app
        run: |
          docker build -t project-015 -f ./server/Dockerfile .
          docker tag project-015 ${{ secrets.DOCKER_HUB_USERNAME }}/project-015:${GITHUB_SHA::7}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/project-015:${GITHUB_SHA::7}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      - name: Start Session Manager session
        run: aws ssm start-session --target i-08a06eac05b066093
      - name: Deploy to Server
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ap-northeast-2
        run: |
          aws ssm send-command \
            --instance-ids i-08a06eac05b066093 \
            --document-name "AWS-RunShellScript" \
            --parameters "commands=[
              'if sudo docker ps -a --format \\'{{.Names}}\\' | grep -q \'^server$\\'; then',
              '  sudo docker stop server',
              '  sudo docker rm server',
              'fi',
              'sudo docker pull leesaewoo/project-015:${GITHUB_SHA::7}',
              'sudo docker tag leesaewoo/project-015:${GITHUB_SHA::7} project-015',
              'sudo docker run -d --name server -p 8080:8080 project-015'
            ]" \
            --output text